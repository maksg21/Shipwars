#include <iostream>
#include <stdlib.h>
#include <time.h>
#include <fstream>
using namespace std;

struct coord
{
    int y;
    int x;

}kordinate;

int randgen(int** brodovi, int n)
{
    int i, j, brojanje = 0;
    srand((unsigned)time(NULL));
    for (i = 0; i < n; i++)
    {
        for (j = 0; j < n; j++)
        {
            brodovi[i][j] = rand() % 2;
            if (brodovi[i][j] == 1)
            {
                brojanje++;
            }
        }
    }
    return brojanje;
}
void izvuci_brod(char** polje, int n)
{
    int i, j;

    polje[0][0] = ' ';
    for (i = 1; i < (n + 1); i++)
    {
        polje[0][i] = i + 48;
        polje[i][0] = i + 48;
    }

    for (i = 1; i < (n + 1); i++)
    {
        for (j = 1; j < (n + 1); j++)
        {
            polje[i][j] = '+';
        }
    }
}
void borba(int** polje_brodova, char** polje, int n, struct coord x, int* brojanje, int* promasaj)
{

    int i, j;

    for (i = 0; i < n; i++)
    {
        for (j = 0; j < n; j++)
        {
            if (x.x - 1 == i && x.y - 1 == j)
            {
                if (polje_brodova[i][j] == 1)
                {
                    if (polje[i + 1][j + 1] == 'O')
                    {
                        cout << "\nVec si otvorio ovo polje!\n" << endl;
                        break;
                    }
                    cout << "\nPun pogodak!!\n" << endl;
                    polje[i + 1][j + 1] = 'O';
                    (*brojanje)--;
                }
                else
                {
                    if (polje[i + 1][j + 1] == 'X')
                    {
                        cout << "\nVec si otvorio ovo polje!\n\n" << endl;
                        break;
                    }
                    cout << "\nLoool fulo si!\n";
                    polje[i + 1][j + 1] = 'X';
                    (*promasaj)++;
                }
            }
        }
    }
}
void result(char** polje_2, int n)
{
    int i, j;

    for (i = 0; i < (n + 1); i++)
    {
        for (j = 0; j < (n + 1); j++)
        {
            cout << polje_2[i][j] << "  ";
        }
        printf("\n\n");
    }
}
int main() {
    fstream file;
    int** brod;
    char** polje_2;
    int i, j;
    int n;
    char promjena_velicine, promjena_tezine;
    int tezina = 0;
    int broj_brodova = 0;
    int broj_x = 0;
    cout << "Zelite li ucitati staru igru [y/n]";
    char izbor;
    cin >> izbor;
    if (toupper(izbor) == 'Y')
    {
        system("cls");
        cout << "Ucitavanje scorea!" << endl;
        file.open("oldgame.bin", ios::binary | ios::in);
        if (file.fail()) {
            cout << "Greska pri otvaranju oldgame.bin." << endl;
            return 0;
        }
        file.read((char*)&n, sizeof(n));
        file.read((char*)&tezina, sizeof(tezina));
        file.read((char*)&broj_brodova, sizeof(broj_brodova));
        file.read((char*)&polje_2, sizeof(polje_2));
        file.read((char*)&brod, sizeof(brod));
        file.close();
    }
    else
    {
        cout << "Izaberi velicinu(M,S,V):" << endl;
        cin >> promjena_velicine;
        switch (promjena_velicine)
        {
        case 'm':
        case 'M':n = 3; break;
        case 'S':
        case 's':n = 5; break;
        case 'V':
        case 'v':n = 8; break;
        default:printf("\nKrivo si izabrao!");
            exit(EXIT_FAILURE);
        }
        cout << "\nBiraj tezinu(L,T)" << endl;
        cin >> promjena_tezine;
        switch (promjena_tezine)
        {
        case 'l':
        case 'L':tezina = (n * 2) - 2; break;
        case 'T':
        case 't':tezina = (n / 2); break;
        default:cout << "\nKrivo si izabrao!";
            exit(EXIT_FAILURE);
        }
        brod = (int**)malloc(n * sizeof(int*));
        for (i = 0; i < n; i++)
        {
            brod[i] = (int*)malloc(n * sizeof(int));
        }
        polje_2 = (char**)malloc((n + 1) * sizeof(char*));
        for (i = 0; i < (n + 1); i++)
        {
            polje_2[i] = (char*)malloc((n + 1) * sizeof(char));
            broj_brodova = randgen(brod, n);
        }
    }
    cout << "\n\nBroj brodova koje treba jos potopiti: " << broj_brodova << endl;
    cout << "\nBroj preostalih dopustenih pogresaka: " << tezina << endl;
    izvuci_brod(polje_2, n);
    result(polje_2, n);
    while (broj_brodova != 0 && broj_x != tezina)
    {
        cout << "\nUpisi koordinatu x (upisi 99 da bi saveao igru): ";
        cin >> kordinate.x;
        cout << "Upisi kordinatu y(upisi 99 da bi saveao igru): ";
        cin >> kordinate.y;
        if (kordinate.x == 99 && kordinate.y == 99)
        {
            cout << "Spremanje igre!" << endl;
            file.open("oldgame.bin", ios::binary | ios::out);
            file.write((char*)&n, sizeof(n));
            file.write((char*)&tezina, sizeof(tezina));
            file.write((char*)&broj_brodova, sizeof(broj_brodova));
            file.write((char*)&polje_2, sizeof(polje_2));
            file.write((char*)&brod, sizeof(brod));
            file.close();
            cout << "Igra spremljena!" << endl;
            return 0;
        }
        system("cls");
        borba(brod, polje_2, n, kordinate, &broj_brodova, &broj_x);
        result(polje_2, n);
        cout << "Broj brodova za potopit: " << broj_brodova << endl;
        
    }
    if (broj_brodova == 0)
    {
        cout << "\nPobjednik!!\n\n" << endl;
    }
    else if (broj_x == tezina)
    {
        cout << "\nIzgubio si\n\n" << endl;
    }
    return 0;
}
